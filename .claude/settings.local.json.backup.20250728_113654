{
  "permissions": {
    "allow": [
      "Read",
      "Write",
      "Edit",
      "MultiEdit",
      "Grep",
      "Glob",
      "LS",
      "NotebookRead",
      "WebFetch",
      "WebSearch",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__gitmcp__get-repo-docs",
      "mcp__gitmcp__search-code",
      "mcp__gitmcp__fetch-file",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npm ci:*)",
      "Bash(npm list:*)",
      "Bash(npm info:*)",
      "Bash(npm audit:*)",
      "Bash(npm outdated:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm why:*)",
      "Bash(pnpm outdated:*)",
      "Bash(uv install:*)",
      "Bash(uv run:*)",
      "Bash(uv sync:*)",
      "Bash(uv list:*)",
      "Bash(yarn install:*)",
      "Bash(yarn add:*)",
      "Bash(yarn remove:*)",
      "Bash(yarn run:*)",
      "Bash(git status:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git stash:*)",
      "Bash(git fetch:*)",
      "Bash(git worktree:*)",
      "Bash(tsc:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(jest:*)",
      "Bash(vitest:*)",
      "Bash(webpack:*)",
      "Bash(vite:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(which:*)",
      "Bash(echo:*)",
      "Bash(touch:*)",
      "Bash(ps:*)",
      "Bash(jobs:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(history:*)",
      "Bash(node ./scripts/decompose-parallel.cjs:*)",
      "Bash(node ./scripts/cache-linear-issue.sh:*)",
      "Bash(./spawn-agents.sh:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip list:*)",
      "Bash(pip show:*)",
      "Bash(gh repo view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh pr list:*)",
      "Bash(bun run:*)",
      "Bash(deno run:*)",
      "Bash(chmod:*)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(node:*)",
      "Bash(npm test:*)",
      "Bash(NODE_OPTIONS='--max-old-space-size=4096' npx jest --coverage --watchAll=false --passWithNoTests --reporters=default --coverageReporters=text-summary)",
      "Bash(CI=true NODE_ENV=test npx jest test/template-engine.test.js --verbose --no-coverage)",
      "Bash(CI=true NODE_ENV=test npx jest src/validation-reporter.test.js --verbose --no-coverage)",
      "Bash(CI=true NODE_ENV=test npx jest --testMatch=\"**/src/{config-generator,python-detector,config-migrator,platform-utils,hook-manager,path-resolver,hook-categorizer,hook-organizer,config-validator,hook-selector,intelligent-agent-generator}.test.js\" --verbose --no-coverage)",
      "Bash(CI=true NODE_ENV=test npx jest src/config-generator.test.js --verbose --no-coverage)",
      "Bash(CI=true NODE_ENV=test npm test -- --maxWorkers=1 --bail=false --testTimeout=10000)",
      "Bash(CI=true NODE_ENV=test npx jest --listTests)",
      "mcp__zen__chat",
      "Bash(npm view:*)",
      "Bash(eza:*)",
      "Bash(scripts/python/cache-linear-issue.py:*)",
      "Bash(scripts/python/security-check.py:*)",
      "Bash(scripts/python/decompose-parallel.py:*)",
      "Bash(scripts/*)",
      "Bash(scripts/python/spawn-agents.py:*)",
      "Bash(scripts/python/monitor-agents.py:*)",
      "Bash(cdev:*)",
      "Bash(sed:*)",
      "Bash(ALLOW_DIRTY=1 npm pack --dry-run)",
      "Bash(tar:*)",
      "Bash(realpath:*)",
      "Bash(npx jest:*)",
      "Bash(ALLOW_DIRTY=1 npm publish)"
    ],
    "deny": []
  }
}
